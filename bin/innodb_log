#!/usr/bin/env ruby
# -*- encoding : utf-8 -*-

require "getoptlong"
require "ostruct"
require "set"
require "innodb"

def log_summary(log, space_ids)
  puts "%-10s%-30s%-10s%-10s" % [
    "block",
    "type",
    "space",
    "page",
  ]
  log.each_block do |block_index, block|
    record = block.first_record_preamble
    if record
      space_id = record[:space]
      if @options.space_ids.empty? or @options.space_ids.include?(space_id)
        puts "%-10i%-30s%-10i%-10i" % [
          block_index,
          record[:type],
          space_id,
          record[:page_number],
        ]
        if @options.dump
          block.dump
        end
      end
    end
  end
end

def usage(exit_code, message = nil)
  print "Error: #{message}\n" unless message.nil?

  print <<'END_OF_USAGE'

Usage: innodb_log [-d] [-s] <file> [<mode>]

  --help, -?
    Print this usage text.

  --dump-blocks, -d
    Dump block header, trailer, and record.

  --space-id, -s
    Print only given space id (may provide multiple times).

The following modes are supported:

  log-summary (default)
    A summary of all blocks within log that contain at least one record.

END_OF_USAGE

  exit exit_code
end

@options = OpenStruct.new
@options.dump = false
@options.space_ids = Set.new

getopt_options = [
  [ "--help",                   "-?",     GetoptLong::NO_ARGUMENT ],
  [ "--dump-blocks",            "-d",     GetoptLong::NO_ARGUMENT ],
  [ "--space-id",               "-s",     GetoptLong::REQUIRED_ARGUMENT ],
]

getopt = GetoptLong.new(*getopt_options)

getopt.each do |opt, arg|
  case opt
  when "--help"
    usage 0
  when "--dump-blocks"
    @options.dump = true
  when "--space-id"
    @options.space_ids << Integer(arg)
  end
end

filename, mode = ARGV.shift(2)
if filename.nil?
  usage 1
end

log = Innodb::Log.new(filename)

mode ||= "log-summary"

case mode
when "log-summary"
  log_summary(log, @options.space_ids)
else
  usage 1, "Unknown mode: #{mode}"
end
