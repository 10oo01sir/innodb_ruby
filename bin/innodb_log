#!/usr/bin/env ruby
# -*- encoding : utf-8 -*-

require "getoptlong"
require "ostruct"
require "set"
require "innodb"

def log_summary(log_group, space_ids)
  puts "%-10s%-30s%-10s%-10s" % [
    "block",
    "type",
    "space",
    "page",
  ]
  log_group.each_block do |block_index, block|
    record = block.first_record_preamble
    if record
      space_id = record[:space]
      if @options.space_ids.empty? or @options.space_ids.include?(space_id)
        puts "%-10i%-30s%-10i%-10i" % [
          block_index,
          record[:type],
          space_id,
          record[:page_number],
        ]
        if @options.dump
          block.dump
        end
      end
    end
  end
end

def record_dump(log_group, lsn)
  log_group.record(lsn).dump
end

def usage(exit_code, message = nil)
  print "Error: #{message}\n" unless message.nil?

  print <<'END_OF_USAGE'

Usage: innodb_log [-d] [-s] -f <log file> <mode>

  --help, -?
    Print this usage text.

  --log-file, -f
    Load a InnoDB redo log file. Repeat for each log file in the log group.

  --dump-blocks, -d
    Dump block header, trailer, and record.

  --space-id, -s
    Print only given space id (may provide multiple times).

  --lsn <number>, -l
    Use the log sequence number <number>.

The following modes are supported:

  log-summary (default)
    A summary of all blocks within the logs that contain at least one record.

  record-dump
    Dump the contents of a log record, using the Ruby pp ("pretty-print") module.

END_OF_USAGE

  exit exit_code
end

@options = OpenStruct.new
@options.log_files = []
@options.dump = false
@options.space_ids = Set.new
@options.lsn = nil

getopt_options = [
  [ "--help",                   "-?",     GetoptLong::NO_ARGUMENT ],
  [ "--log-file",               "-f",     GetoptLong::REQUIRED_ARGUMENT ],
  [ "--dump-blocks",            "-d",     GetoptLong::NO_ARGUMENT ],
  [ "--space-id",               "-s",     GetoptLong::REQUIRED_ARGUMENT ],
  [ "--lsn",                    "-l",     GetoptLong::REQUIRED_ARGUMENT ],
]

getopt = GetoptLong.new(*getopt_options)

getopt.each do |opt, arg|
  case opt
  when "--help"
    usage 0
  when "--log-file"
    @options.log_files << arg
  when "--dump-blocks"
    @options.dump = true
  when "--space-id"
    @options.space_ids << arg.to_i
  when "--lsn"
    @options.lsn = arg.to_i
  end
end

mode = ARGV.shift

unless mode
  usage 1, "At least one mode must be provided"
end

if @options.log_files.empty?
  usage 1, "At least one log file (-f) must be specified"
end

if /^record-/.match(mode) and !@options.lsn
  usage 1, "LSN must be specified using -l/--lsn"
end

log_group = Innodb::LogGroup.new(@options.log_files.sort)

case mode
when "log-summary"
  log_summary(log_group, @options.space_ids)
when "record-dump"
  record_dump(log_group, @options.lsn)
else
  usage 1, "Unknown mode: #{mode}"
end
